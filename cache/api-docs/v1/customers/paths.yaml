CustomerMeta:
  get:
    tags:
      - customers_customers
    operationId: getCustomerMeta
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@meta
    summary: Getting a list of available fields
    description: Getting a list of available fields
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/GetResourceMetaResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerOrderMeta:
  get:
    tags:
      - customers_customers
    operationId: getCustomerOrderMeta
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerOrdersController@meta
    x-lg-skip-resource-generation: true
    summary: Getting a list of available fields
    description: Getting a list of available fields
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/GetResourceMetaResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerSearch:
  post:
    tags:
      - customers_customers
    operationId: searchCustomers
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@search
    x-lg-skip-request-generation: true
    summary: Search for customers that meet the filter
    description: Search for customers matching the filter
    requestBody:
      content:
        application/json:
          schema:
            $ref: ./schemas/customers.yaml#/SearchCustomersRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customers.yaml#/SearchCustomersResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerEnumValuesSearch:
  post:
    tags:
      - customers_customers
    operationId: searchCustomerEnumValues
    summary: Search for customers for a directory
    description: Search for customers for a directory
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@searchEnumValues
    x-lg-route-name: customers.searchCustomerEnumValues
    x-lg-skip-request-generation: true
    requestBody:
      $ref: ../index.yaml#/components/requestBodies/SearchEnumValuesRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/SearchEnumValuesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
Customers:
  post:
    tags:
      - customers_customers
    operationId: createCustomer
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@create
    x-lg-request-class-name: Customers/CreateCustomerRequest
    summary: Request to create a new customer
    description: Request to create a new customer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customers.yaml#/CreateCustomerRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customers.yaml#/CustomerResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerCurrent:
  get:
    tags:
      - customers_customers
    operationId: getCustomer
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@get
    summary: Request to get a customer
    description: Request to get a customer
    parameters:
      - $ref: "#/components/parameters/PathId"
      - $ref: "#/components/parameters/QueryInclude"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customers.yaml#/CustomerResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - customers_customers
    operationId: patchCustomer
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@patch
    x-lg-request-class-name: Customers/PatchCustomerRequest
    summary: Updating an object of type Customer
    description: Updating an object of type Customer
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customers.yaml#/PatchCustomerRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customers.yaml#/CustomerResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerDeletePersonalData:
  post:
    tags:
      - customers_customers
    operationId: deleteCustomerPersonalData
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@deletePersonalData
    x-lg-skip-request-generation: true
    summary: Request to delete customer's personal data
    description: Request to delete customer's personal data
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerUploadAvatar:
  post:
    tags:
      - customers_customers
    operationId: uploadCustomerAvatar
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@uploadAvatar
    x-lg-request-class-name: Customers/UploadCustomerAvatarRequest
    summary: Uploading a file with customer avatar
    description: Uploading a file with customer avatar
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: ../common_schemas.yaml#/MultipartFileUploadRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customers.yaml#/CustomerResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerDeleteAvatar:
  post:
    tags:
      - customers_customers
    operationId: deleteCustomerAvatar
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersController@deleteAvatar
    x-lg-skip-request-generation: true
    summary: Deleting a customer avatar
    description: Deleting a customer avatar from the database and file system
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customers.yaml#/CustomerResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
UsersSearch:
  post:
    tags:
      - customers_users
    operationId: searchCustomerUsers
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@search
    x-lg-skip-request-generation: true
    summary: Request to search for a User matching the filter
    description: Request to search for a User matching the filter
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/users.yaml#/SearchUsersRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/users.yaml#/SearchUsersResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
UsersSearchOne:
  post:
    tags:
      - customers_users
    operationId: searchOneCustomerUser
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@searchOne
    x-lg-skip-request-generation: true
    summary: Request to search for one User matching the filter
    description: Request to search for one User matching the filter
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/users.yaml#/SearchUsersRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/users.yaml#/UserResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
Users:
  post:
    tags:
      - customers_users
    operationId: createCustomerUser
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@create
    x-lg-request-class-name: Users/CreateCustomerUserRequest
    summary: Request to create a new user
    description: Request to create a new user
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/users.yaml#/CreateUserRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/users.yaml#/UserResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
UsersCurrent:
  get:
    tags:
      - customers_users
    operationId: getCustomerUser
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@get
    summary: Request to get user by id
    description: Request to get user by id
    parameters:
      - $ref: "#/components/parameters/PathId"
      - $ref: "#/components/parameters/QueryInclude"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/users.yaml#/UserResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - customers_users
    operationId: patchCustomerUser
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@patch
    x-lg-request-class-name: Users/PatchCustomerUserRequest
    summary: Request to update part of user's fields
    description: Request to update part of user's fields
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/users.yaml#/PatchUserRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/users.yaml#/UserResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - customers_users
    operationId: deleteCustomerUser
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@delete
    x-lg-skip-request-generation: true
    summary: Request to delete a user
    description: Request to delete a user
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerUsersEnumValuesSearch:
  post:
    tags:
      - customers_users
    operationId: searchCustomerUserEnumValues
    summary: Search users for directory
    description: Search users for a directory
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@searchEnumValues
    x-lg-route-name: customers.searchCustomerUserEnumValues
    x-lg-skip-request-generation: true
    requestBody:
      $ref: ../index.yaml#/components/requestBodies/SearchEnumValuesRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/SearchEnumValuesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerAddressSearch:
  post:
    tags:
      - customers_customer_address
    operationId: searchCustomerAddresses
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersAddressesController@search
    x-lg-skip-request-generation: true
    summary: Searching for addresses that match the filter
    description: Searching for addresses that match the filter
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_addresses.yaml#/SearchCustomerAddressesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_addresses.yaml#/SearchCustomerAddressesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerAddress:
  post:
    tags:
      - customers_customer_address
    operationId: createCustomerAddress
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersAddressesController@create
    x-lg-request-class-name: Addresses/CreateCustomerAddressRequest
    summary: Request to create a new customer address
    description: Request to create a new customer address
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_addresses.yaml#/CreateCustomerAddressRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_addresses.yaml#/CustomerAddressResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerAddressCurrent:
  get:
    tags:
      - customers_customer_address
    operationId: getCustomerAddress
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersAddressesController@get
    summary: Request to get address by id
    description: Request to get address by id
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_addresses.yaml#/CustomerAddressResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  put:
    tags:
      - customers_customer_address
    operationId: replaceCustomerAddress
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersAddressesController@replace
    x-lg-request-class-name: Addresses/ReplaceCustomerAddressRequest
    summary: Request to update customer address
    description: Request to update customer address
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_addresses.yaml#/ReplaceCustomerAddressRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_addresses.yaml#/CustomerAddressResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - customers_customer_address
    operationId: deleteCustomerAddress
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersAddressesController@delete
    x-lg-skip-request-generation: true
    summary: Request to delete customer address
    description: Request to delete customer address
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerAddressStandard:
  post:
    tags:
      - customers_customer_address
    operationId: setCustomerAddressesAsDefault
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersAddressesController@setDefault
    x-lg-skip-request-generation: true
    summary: Request to set default address
    description: Request to set default address
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerStatusesSearch:
  post:
    tags:
      - customers_customer_status
    operationId: searchCustomerStatuses
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerStatusesController@search
    x-lg-skip-request-generation: true
    summary: Search for statuses matching the filter
    description: Search for statuses matching the filter
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_statuses.yaml#/SearchCustomerStatusesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_statuses.yaml#/SearchCustomerStatusesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerStatuses:
  post:
    tags:
      - customers_customer_status
    operationId: createCustomerStatus
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerStatusesController@create
    x-lg-request-class-name: Statuses/CreateCustomerStatusRequest
    summary: Request to create a new client status
    description: Request to create a new client status
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_statuses.yaml#/CreateCustomerStatusRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_statuses.yaml#/CustomerStatusResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerStatusesOne:
  get:
    tags:
      - customers_customer_status
    operationId: getCustomerStatus
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerStatusesController@get
    summary: Request to get status by id
    description: Request to get status by id
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_statuses.yaml#/CustomerStatusResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - customers_customer_status
    operationId: patchCustomerStatus
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerStatusesController@patch
    x-lg-request-class-name: Statuses/PatchCustomerStatusRequest
    summary: Request to update customer status
    description: Request to update customer status
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_statuses.yaml#/PatchCustomerStatusRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_statuses.yaml#/CustomerStatusResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - customers_customer_status
    operationId: deleteCustomerStatus
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerStatusesController@delete
    x-lg-skip-request-generation: true
    summary: Request to delete client status
    description: Request to delete customer status
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerStatusesEnumValuesSearch:
  post:
    tags:
      - customers_customer_status
    operationId: searchCustomerStatusEnumValues
    summary: Search client status for a directory
    description: Search client status for a directory
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerStatusesController@searchEnumValues
    x-lg-route-name: customers.searchCustomerStatusEnumValues
    x-lg-skip-request-generation: true
    requestBody:
      $ref: ../index.yaml#/components/requestBodies/SearchEnumValuesRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/SearchEnumValuesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerFavoritesSearch:
  post:
    tags:
      - customers_customer_favourites
    operationId: searchCustomerFavorite
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersFavoritesController@search
    x-lg-skip-request-generation: true
    summary: Search for objects of CustomerFavorite
    description: Search for objects of CustomerFavorite
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_favorites.yaml#/SearchCustomerFavoritesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_favorites.yaml#/SearchCustomerFavoritesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerFavoritesMassAdd:
  post:
    tags:
      - customers_customer_favourites
    operationId: createCustomerFavorites
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersFavoritesController@create
    x-lg-request-class-name: Favorites/CreateCustomerFavoriteRequest
    summary: Mass creating objects of CustomerFavorite
    description: Mass creating objects of CustomerFavorite
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_favorites.yaml#/CreateCustomerFavoritesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerFavoritesMassDelete:
  post:
    tags:
      - customers_customer_favourites
    operationId: deleteCustomerFavorites
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersFavoritesController@delete
    x-lg-request-class-name: Favorites/DeleteCustomerFavoriteRequest
    summary: Mass deleting objects of CustomerFavorite
    description: Mass deleting objects of CustomerFavorite
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_favorites.yaml#/DeleteCustomerFavoritesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerFavoritesClear:
  post:
    tags:
      - customers_customer_favourites
    operationId: clearCustomerFavorites
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersFavoritesController@clear
    x-lg-request-class-name: Favorites/ClearCustomerFavoritesRequest
    summary: Deleting all objects of CustomerFavorite by Customer
    description: Deleting all objects of CustomerFavorite by Customer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_favorites.yaml#/ClearCustomerFavoritesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomersInfoSearch:
  post:
    tags:
      - customers_customers_info
    operationId: searchCustomersInfo
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersInfoController@search
    x-lg-skip-request-generation: true
    summary: Searching for crm customer information
    description: Searching for crm customer information
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_customers_info.yaml#/SearchCustomersInfoRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_customers_info.yaml#/SearchCustomersInfoResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomersInfo:
  post:
    tags:
      - customers_customers_info
    operationId: createCustomerInfo
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersInfoController@create
    x-lg-request-class-name: CustomersInfo/CreateCustomerInfoRequest
    summary: Create customer crm information
    description: Create customer crm information
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_customers_info.yaml#/CreateCustomerInfoRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_customers_info.yaml#/CustomerInfoResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomersInfoCurrent:
  get:
    tags:
      - customers_customers_info
    operationId: getCustomersInfo
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersInfoController@get
    summary: Request to receive customer crm information by id
    description: Request to receive customer crm information by id
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_customers_info.yaml#/CustomerInfoResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - customers_customers_info
    operationId: patchCustomerInfo
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersInfoController@patch
    x-lg-request-class-name: CustomersInfo/PatchCustomerInfoRequest
    summary: Request to update customer crm information
    description: Request to update customer crm information
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_customers_info.yaml#/ReplaceCustomerInfoRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_customers_info.yaml#/CustomerInfoResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - customers_customers_info
    operationId: deleteCustomersInfo
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersInfoController@delete
    x-lg-skip-request-generation: true
    summary: Request to delete customer crm information
    description: Request to delete customer crm information
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomersBonusOperationsSearch:
  post:
    tags:
      - customers_bonus_operations
    operationId: searchCustomersBonusOperations
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersBonusOperationsController@search
    x-lg-skip-request-generation: true
    summary: Search for customer's bonus operations
    description: Search for customer's bonus operations
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_bonus_operations.yaml#/SearchBonusOperationsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_bonus_operations.yaml#/SearchBonusOperationsResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomersBonusOperations:
  post:
    tags:
      - customers_bonus_operations
    operationId: createBonusOperation
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersBonusOperationsController@create
    x-lg-request-class-name: BonusOperations/CreateBonusOperationRequest
    summary: Creating customer's bonus operations
    description: Creating customer's bonus operations
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_bonus_operations.yaml#/CreateBonusOperationRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_bonus_operations.yaml#/BonusOperationResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomersBonusOperationsCurrent:
  get:
    tags:
      - customers_bonus_operations
    operationId: getBonusOperation
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersBonusOperationsController@get
    summary: Getting customer's bonus operations by id
    description: Getting customer's bonus operations by id
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_bonus_operations.yaml#/BonusOperationResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - customers_bonus_operations
    operationId: patchBonusOperation
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersBonusOperationsController@patch
    x-lg-request-class-name: BonusOperations/PatchBonusOperationRequest
    summary: Updating the customer's bonus transaction
    description: Updating the customer's bonus operations
    parameters:
      - $ref: "#/components/parameters/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_bonus_operations.yaml#/PatchBonusOperationRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_bonus_operations.yaml#/BonusOperationResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - customers_bonus_operations
    operationId: deleteBonusOperation
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersBonusOperationsController@delete
    x-lg-skip-request-generation: true
    summary: Deleting customer bonus transactions
    description: Deleting customer bonus transactions
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerProductSubscribesSearch:
  post:
    tags:
      - customers_product_subscribes
    operationId: searchCustomerProductSubscribes
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersProductSubscribesController@search
    x-lg-skip-request-generation: true
    summary: Search for product subscriptions
    description: Search for product subscriptions
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_product_subscribes.yaml#/SearchProductSubscribesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_product_subscribes.yaml#/SearchProductSubscribesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerProductSubscribes:
  post:
    tags:
      - customers_product_subscribes
    operationId: createCustomerProductSubscribes
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersProductSubscribesController@create
    x-lg-request-class-name: ProductSubscribes/CreateCustomerProductSubscribeRequest
    summary: Creating a customer subscription to a product
    description: Creating a customer subscription to a product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_product_subscribes.yaml#/CreateProductSubscribeRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_product_subscribes.yaml#/ProductSubscribeResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerProductSubscribesDelete:
  post:
    tags:
      - customers_product_subscribes
    operationId: deleteCustomerProductSubscribes
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersProductSubscribesController@delete
    x-lg-request-class-name: ProductSubscribes/DeleteCustomerProductSubscribeRequest
    summary: Deleting a customer's subscription to a product
    description: Deleting a customer's subscription to a product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_product_subscribes.yaml#/DeleteProductSubscribesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerProductSubscribesClear:
  post:
    tags:
      - customers_product_subscribes
    operationId: clearCustomerProductSubscribes
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersProductSubscribesController@clear
    x-lg-request-class-name: ProductSubscribes/ClearCustomerProductSubscribesRequest
    summary: Deleting all customer subscriptions for goods
    description: Deleting all customer subscriptions for goods
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_product_subscribes.yaml#/ClearProductSubscribesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerPreferencesSearch:
  post:
    tags:
      - customers_preferences
    operationId: searchCustomerPreferences
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomersPreferencesController@search
    x-lg-skip-request-generation: true
    summary: Search for customer preferences
    description: Search for customer preferences
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/customer_preferences.yaml#/SearchPreferencesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/customer_preferences.yaml#/SearchPreferencesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
CustomerUserRefreshPasswordToken:
  post:
    tags:
      - customers_users
    operationId: customerUserRefreshPasswordToken
    x-lg-handler: App\Http\ApiV1\Modules\Customers\Controllers\CustomerUsersController@refreshPasswordToken
    x-lg-skip-request-generation: true
    summary: Update token for password setting for customer user
    description: Update token for password setting for customer user
    parameters:
      - $ref: "#/components/parameters/PathId"
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/SuccessEmptyResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
components:
  parameters:
    QueryInclude:
      in: query
      name: include
      required: false
      description: Related entities to be loaded, separated by commas
      schema:
        type: string
    PathId:
      in: path
      name: id
      required: true
      schema:
        type: integer
        minimum: 1
      description: Numeric id
      example: 1
