ProductsSearch:
  post:
    tags:
      - catalog_products
    operationId: searchProducts
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductsController@search
    x-lg-skip-request-generation: true
    summary: Search for objects of Product
    description: |
      ### Search for objects of Product

      Available include values:
      * _brand_
      * _categories_
      * _images_
      * _attributes_
      * _product_groups_
      * _product_groups.category_
      * _product_groups.main_product_
      * _product_groups.products_
      * _no_filled_required_attributes_
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/SearchProductsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/SearchProductsResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsPropertyEnumValuesSearch:
  post:
    tags:
      - catalog_products
    operationId: searchProductsPropertyEnumValues
    summary: Search for objects of Product for enum
    description: Search for objects of Product for enum
    x-lg-handler: \App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductsController@searchEnumValues
    x-lg-route-name: catalog.searchProductsEnumValues
    x-lg-skip-request-generation: true
    parameters:
      - $ref: "#/Property"
    requestBody:
      $ref: ../index.yaml#/components/requestBodies/SearchEnumValuesRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/SearchEnumValuesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductDraftsSearch:
  post:
    tags:
      - catalog_products
    operationId: searchProductDrafts
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@search
    x-lg-skip-request-generation: true
    summary: Search for objects of ProductDraft
    description: |
      ### Search for objects of ProductDraft

      Available include values:
      * _brand_
      * _categories_
      * _images_
      * _attributes_
      * _product_groups_
      * _product_groups.category_
      * _product_groups.main_product_
      * _product_groups.products_
      * _no_filled_required_attributes_
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/SearchProductDraftsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/SearchProductDraftsResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsDraftsMeta:
  get:
    tags:
      - catalog_products
    operationId: getProductsMeta
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@meta
    x-lg-skip-resource-generation: true
    summary: Getting a list of available fields
    description: Getting a list of available fields
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/GetResourceMetaResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductDraftEnumValuesSearch:
  post:
    tags:
      - catalog_products
    operationId: searchProductDraftEnumValues
    summary: Search for objects of ProductDraft for enum
    description: Search for objects of ProductDraft for enum
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@searchEnumValues
    x-lg-route-name: catalog.searchProductDraftEnumValues
    x-lg-skip-request-generation: true
    requestBody:
      $ref: ../index.yaml#/components/requestBodies/SearchEnumValuesRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/SearchEnumValuesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
Products:
  post:
    tags:
      - catalog_products
    operationId: createProduct
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@create
    summary: Creating an object of Product
    description: |
      Creating an object of Product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/CreateProductRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/ProductDraftResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/BadRequest
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsMeta:
  get:
    tags:
      - catalog_products
    operationId: getProductsMeta
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductsController@meta
    x-lg-skip-resource-generation: true
    summary: Getting a list of available fields
    description: Getting a list of available fields
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/GetResourceMetaResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsMassPatch:
  post:
    tags:
      - catalog_products
    operationId: massPatchProducts
    summary: Mass patching of object Product
    description: Mass patching of object Product
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@massPatch
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/MassPatchProductsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/MassPatchProductsResult
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsMassPatchByQuery:
  post:
    tags:
      - catalog_products
    operationId: massPatchProductsByQuery
    summary: Mass patching of object Product by filter
    description: Mass patching of object Product by filter
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@massPatchByQuery
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/MassPatchProductsByQueryRequest
    responses:
      "200":
        description: Job added to query
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsCommonAttributes:
  post:
    tags:
      - catalog_products
    operationId: getProductsCommonAttributes
    summary: Getting common attributes for selected products
    description: Getting common attributes for selected products
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@commonAttributes
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/ProductsCommonAttributesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/ProductsCommonAttributesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsCurrent:
  get:
    tags:
      - catalog_products
    operationId: getProduct
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductsController@get
    summary: Get the object of Product by ID
    description: Get the object of Product by ID
    parameters:
      - $ref: "#/PathId"
      - $ref: ../common_parameters.yaml#/QueryInclude
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/ProductResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  put:
    tags:
      - catalog_products
    operationId: replaceProduct
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@replace
    summary: Replacing an object of Product
    description: Replacing an object of Product
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/ReplaceProductRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/ProductDraftResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - catalog_products
    operationId: patchProduct
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@patch
    summary: Patching an object of Product
    description: Patching an object of Product
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/products.yaml#/PatchProductRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/ProductDraftResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - catalog_products
    operationId: deleteProduct
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@delete
    x-lg-skip-request-generation: true
    summary: Deleting an object of Product
    description: Deleting an object of Product
    parameters:
      - $ref: "#/PathId"
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/DeleteResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductDraftsCurrent:
  get:
    tags:
      - catalog_products
    operationId: getProductDraft
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@get
    summary: Search for objects of ProductDraft
    description: |
      ### Search for objects of ProductDraft

      Available include values:
      * _brand_
      * _categories_
      * _images_
      * _attributes_
      * _product_groups_
      * _product_groups.category_
      * _product_groups.main_product_
      * _product_groups.products_
    parameters:
      - $ref: "#/PathId"
      - $ref: ../common_parameters.yaml#/QueryInclude
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/products.yaml#/ProductDraftResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductAttributesUpdate:
  put:
    tags:
      - catalog_products
    operationId: replaceProductAttributes
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@replaceAttributes
    summary: Replacing all product attributes
    description: Replacing all product attributes. All not specified in the request
      attributes will be deleted
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_attributes.yaml#/ReplaceProductAttributesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_attributes.yaml#/ProductAttributesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - catalog_products
    operationId: patchProductAttributes
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@patchAttributes
    summary: Patching product attributes
    description: Creating new attributes and updating specified ones. Attributes not
      specified in the request won't be changed
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_attributes.yaml#/PatchProductAttributesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_attributes.yaml#/ProductAttributesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - catalog_products
    operationId: deleteProductAttributes
    summary: Deleting object of ProductAttribute
    description: Deleting object of ProductAttribute
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@deleteAttributes
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_attributes.yaml#/DeleteProductAttributesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductsPreloadImage:
  post:
    tags:
      - catalog_products
    operationId: preloadImage
    summary: Upload image for product or product attribute
    description: Upload image for product or product attribute
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@preloadImage
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: ../common_schemas.yaml#/MultipartFileUploadRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/PreloadFileResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductImagesEdit:
  put:
    tags:
      - catalog_products
    operationId: replaceImages
    summary: Replacing all product images
    description: Replacing all product images. All not specified in request images
      will be deleted
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@replaceImages
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_images.yaml#/ReplaceProductImagesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_images.yaml#/ProductImagesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - catalog_products
    operationId: patchImages
    summary: Patching product images
    description: Creating new images and updating specified ones. Images not
      specified in the request won't be changed
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@patchImages
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_images.yaml#/PatchProductImagesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_images.yaml#/ProductImagesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductImageUpload:
  post:
    tags:
      - catalog_products
    operationId: uploadProductImage
    summary: Uploading product image
    description: Uploading product image
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@uploadImage
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_images.yaml#/ProductImageUploadRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_images.yaml#/ProductImageResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductImageDelete:
  post:
    tags:
      - catalog_products
    operationId: deleteProductImage
    summary: Deleting product image
    description: Deleting product image
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductDraftsController@deleteImage
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_images.yaml#/ProductImageDeleteRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ../common_schemas.yaml#/EmptyDataResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductFieldsSearch:
  post:
    tags:
      - catalog_products
    operationId: searchProductFields
    summary: Search for objects of ProductField
    description: Search for objects of ProductField
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductFieldsController@search
    x-lg-skip-request-generation: true
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_fields.yaml#/SearchProductFieldsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_fields.yaml#/SearchProductFieldsResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductFieldsCurrent:
  get:
    tags:
      - catalog_products
    operationId: getProductField
    summary: Get the object of ProductField by ID
    description: Get the object of ProductField by ID
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductFieldsController@get
    parameters:
      - $ref: "#/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_fields.yaml#/ProductFieldResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - catalog_products
    operationId: patchProductField
    summary: Patching an object of ProductField
    description: Patching an object of ProductField
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Products\ProductFieldsController@patch
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_fields.yaml#/PatchProductFieldRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_fields.yaml#/ProductFieldResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductTypes:
  get:
    tags:
      - catalog_products
    operationId: getProductTypes
    summary: Get available product types
    description: Get available product types corresponding to the values of the
      CatalogProductTypeEnum
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\EnumsController@productTypes
    x-lg-skip-resource-generation: true
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/enums.yaml#/ProductTypesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductUom:
  get:
    tags:
      - catalog_products
    operationId: getProductUom
    summary: Get available units of measure for a product
    description: Get available units of measure for a product corresponding to the
      values of the CatalogProductUomEnum
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\EnumsController@productUom
    x-lg-skip-resource-generation: true
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/enums.yaml#/ProductUomResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductTariffingVolumes:
  get:
    tags:
      - catalog_products
    operationId: getProductTariffingVolumes
    summary: Get available product tariffs
    description: Get available product tariffs corresponding to the values of the
      CatalogProductTariffingVolumeEnum
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\EnumsController@productTariffingVolumes
    x-lg-skip-resource-generation: true
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/enums.yaml#/ProductTariffingVolumesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
PathId:
  in: path
  name: id
  required: true
  schema:
    type: integer
    minimum: 1
  description: Numeric ID
  example: 1
Property:
  in: path
  name: property
  required: true
  schema:
    type: string
  example: name
