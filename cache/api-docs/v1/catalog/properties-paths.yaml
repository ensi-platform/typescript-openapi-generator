PropertiesMeta:
  get:
    tags:
      - catalog_properties
    operationId: getPropertiesMeta
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@meta
    x-lg-skip-resource-generation: true
    summary: Getting a list of available fields
    description: Getting a list of available fields
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/GetResourceMetaResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
PropertiesSearch:
  post:
    tags:
      - catalog_properties
    operationId: searchProperties
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@search
    x-lg-skip-request-generation: true
    summary: Search for objects of Property
    description: |
      ### Search for objects of Property

      Available include values:
      * _directory_
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/properties.yaml#/SearchPropertiesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/properties.yaml#/SearchPropertiesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
Properties:
  post:
    tags:
      - catalog_properties
    operationId: createProperty
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@create
    summary: Creating an object of Property
    description: Creating an object of Property
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/properties.yaml#/CreatePropertyRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/properties.yaml#/PropertyResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
PropertiesCurrent:
  get:
    tags:
      - catalog_properties
    operationId: getProperty
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@get
    x-lg-skip-request-generation: true
    summary: Get the object of Property by ID
    description: |
      ### Get the object of Property by ID

      Available include values:
      * _directory_
    parameters:
      - $ref: "#/PathId"
      - $ref: ../common_parameters.yaml#/QueryInclude
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/properties.yaml#/PropertyResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  put:
    tags:
      - catalog_properties
    operationId: replaceProperty
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@replace
    summary: Replacing an object of Property
    description: Replacing an object of Property
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/properties.yaml#/ReplacePropertyRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/properties.yaml#/PropertyResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - catalog_properties
    operationId: patchProperty
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@patch
    summary: Patching an object of Property
    description: Patching an object of Property
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/properties.yaml#/PatchPropertyRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/properties.yaml#/PropertyResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - catalog_properties
    operationId: deleteProperty
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\PropertiesController@delete
    x-lg-skip-request-generation: true
    summary: Deleting an object of Property
    description: Deleting an object of Property
    parameters:
      - $ref: "#/PathId"
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/DeleteResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
PropertiesTypes:
  get:
    tags:
      - catalog_properties
    operationId: getPropertiesTypes
    summary: Get available property types
    description: Get available property types corresponding to the CatalogPropertyTypeEnum
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\EnumsController@propertyTypes
    x-lg-skip-resource-generation: true
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/enums.yaml#/PropertiesTypesResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
DirectorySearch:
  post:
    tags:
      - catalog_properties
    operationId: searchDirectoryValues
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@search
    x-lg-skip-request-generation: true
    summary: Search for objects of DirectoryValue
    description: Search for objects of DirectoryValue
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/directory_values.yaml#/SearchDirectoryValuesRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/directory_values.yaml#/SearchDirectoryValuesResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
Directory:
  post:
    tags:
      - catalog_properties
    operationId: createDirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@create
    summary: Creating an object of DirectoryValue
    description: Creating an object of DirectoryValue
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/directory_values.yaml#/CreateDirectoryValueRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/directory_values.yaml#/DirectoryValueResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
DirectoryMassCreate:
  post:
    tags:
      - catalog_properties
    operationId: massCreateDirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@massCreate
    summary: Mass creating of objects DirectoryValue
    description: Mass creating of objects DirectoryValue
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/directory_values.yaml#/MassCreateDirectoryValueRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/directory_values.yaml#/MassDirectoryValueResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
DirectoryCurrent:
  get:
    tags:
      - catalog_properties
    operationId: getDirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@get
    summary: Get the object of DirectoryValue by ID
    description: Get the object of DirectoryValue by ID
    parameters:
      - $ref: "#/PathId"
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/directory_values.yaml#/DirectoryValueResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  put:
    tags:
      - catalog_properties
    operationId: replaceDirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@replace
    summary: Replacing an object of DirectoryValue
    description: Replacing an object of DirectoryValue
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/directory_values.yaml#/ReplaceDirectoryValueRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/directory_values.yaml#/DirectoryValueResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - catalog_properties
    operationId: deleteDirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@delete
    x-lg-skip-request-generation: true
    summary: Deleting an object of DirectoryValue
    description: Deleting an object of DirectoryValue
    parameters:
      - $ref: "#/PathId"
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/DeleteResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
DirectoryPreloadImage:
  post:
    tags:
      - catalog_properties
    operationId: preloadDirectoryValueImage
    summary: Uploading image for DirectoryValue
    description: Uploading image for DirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@preloadImage
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: ../common_schemas.yaml#/MultipartFileUploadRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/PreloadFileResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
DirectoryPreloadFile:
  post:
    tags:
      - catalog_properties
    operationId: preloadDirectoryValueFile
    summary: Uploading file for DirectoryValue
    description: Uploading file for DirectoryValue
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\Properties\DirectoryValuesController@preloadFile
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: ../common_schemas.yaml#/MultipartFileUploadRequest
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/PreloadFileResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
PathId:
  in: path
  name: id
  required: true
  schema:
    type: integer
    minimum: 1
  description: Numeric ID
  example: 1
