ProductGroups:
  post:
    tags:
      - catalog_product_groups
    operationId: createProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@create
    summary: Creating an object of ProductGroup
    description: Creating an object of ProductGroup
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_groups.yaml#/CreateProductGroupRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_groups.yaml#/ProductGroupResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductGroupsCurrent:
  get:
    tags:
      - catalog_product_groups
    operationId: getCatalogProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@get
    summary: Get the object of ProductGroup by ID
    description: Get the object of ProductGroup by ID
    parameters:
      - $ref: "#/PathId"
      - $ref: ../common_parameters.yaml#/QueryInclude
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_groups.yaml#/ProductGroupResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  patch:
    tags:
      - catalog_product_groups
    operationId: patchProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@patch
    summary: Patching an object of ProductGroup
    description: Patching an object of ProductGroup
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_groups.yaml#/PatchProductGroupRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_groups.yaml#/ProductGroupResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
  delete:
    tags:
      - catalog_product_groups
    operationId: deleteCatalogProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@delete
    x-lg-skip-request-generation: true
    summary: Deleting an object of ProductGroup
    description: Deleting an object of ProductGroup
    parameters:
      - $ref: "#/PathId"
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/DeleteResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductGroupsCurrentBindProducts:
  post:
    tags:
      - catalog_product_groups
    operationId: bindProductGroupProducts
    summary: Changing the products linked to the ProductGroup
    description: Changing the products linked to the ProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@bindProducts
    parameters:
      - $ref: "#/PathId"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_groups.yaml#/BindProductGroupProductsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_groups.yaml#/ProductGroupsBindResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "404":
        $ref: ../index.yaml#/components/responses/NotFound
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductGroupsMassDelete:
  post:
    tags:
      - catalog_product_groups
    operationId: deleteCatalogProductGroups
    summary: Mass deleting objects of ProductGroup
    description: Mass deleting objects of ProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@massDelete
    x-lg-skip-request-generation: true
    requestBody:
      $ref: ../index.yaml#/components/requestBodies/MassDeleteBody
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/MassOperationResultResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductGroupsMeta:
  get:
    tags:
      - catalog_product_groups
    operationId: getCatalogProductGroupsMeta
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@meta
    x-lg-skip-resource-generation: true
    summary: Getting a list of available fields
    description: Getting a list of available fields
    responses:
      "200":
        $ref: ../index.yaml#/components/responses/GetResourceMetaResponse
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductGroupsSearch:
  post:
    tags:
      - catalog_product_groups
    operationId: searchCatalogProductGroups
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@search
    x-lg-skip-request-generation: true
    summary: Search for objects of ProductGroup
    description: Search for objects of ProductGroup
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_groups.yaml#/SearchProductGroupsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_groups.yaml#/SearchProductGroupsResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
ProductGroupsSearchOne:
  post:
    tags:
      - catalog_product_groups
    operationId: searchOneCatalogProductGroup
    summary: Search for an object of ProductGroup
    description: Search for an object of ProductGroup
    x-lg-handler: App\Http\ApiV1\Modules\Catalog\Controllers\ProductGroups\ProductGroupsController@searchOne
    x-lg-skip-request-generation: true
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: ./schemas/product_groups.yaml#/SearchProductGroupsRequest
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: ./schemas/product_groups.yaml#/ProductGroupResponse
      "400":
        $ref: ../index.yaml#/components/responses/BadRequest
      "401":
        $ref: ../index.yaml#/components/responses/Unauthorized
      "403":
        $ref: ../index.yaml#/components/responses/Forbidden
      "500":
        $ref: ../index.yaml#/components/responses/ServerError
PathId:
  in: path
  name: id
  required: true
  schema:
    type: integer
    minimum: 1
  description: Numeric ID
  example: 1
