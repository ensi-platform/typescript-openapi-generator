ProductReadonlyProperties:
  type: object
  properties:
    id:
      type: integer
      example: 15324
    tariffing_volume:
      nullable: true
      description: Unit of tariffication from CatalogProductTariffingVolumeEnum from PIM
      allOf:
        - type: integer
        - $ref: ../enums/catalog_product_tariffing_volume_enum.yaml
    main_image_file:
      type: string
      nullable: true
      example: http://es.ensi.127.0.0.1.nip.io/catalog/products/ba/5e/zHgaNTq9LgCU3yXA3lNG.jpg
    created_at:
      description: Create time
      format: date-time
      type: string
      example: 2021-07-03T11:57:28.000000Z
    updated_at:
      description: Update time
      format: date-time
      type: string
      example: 2021-07-03T11:57:28.000000Z
  required:
    - id
    - tariffing_volume
    - main_image_file
    - created_at
    - updated_at
ProductMassPatchableProperties:
  type: object
  properties:
    category_ids:
      type: array
      description: Category IDs from PIM
      items:
        type: integer
        example: 123
    brand_id:
      type: integer
      nullable: true
      description: Brand ID from PIM
      example: 285
    name:
      type: string
      example: Apple juice
    description:
      type: string
      nullable: true
      example: Fresh apple juice
    type:
      type: integer
      description: Product type from CatalogProductTypeEnum
      allOf:
        - type: integer
        - $ref: ../enums/catalog_product_type_enum.yaml
    allow_publish:
      type: boolean
      example: true
    weight:
      type: number
      nullable: true
      description: Net weight in kg
      example: 0.5
    weight_gross:
      type: number
      nullable: true
      description: Gross weight in kg
      example: 0.75
    length:
      type: number
      nullable: true
      description: Length in mm
      example: 100
    width:
      type: number
      nullable: true
      description: Width in mm
      example: 150
    height:
      type: number
      nullable: true
      description: Height in mm
      example: 50
    is_adult:
      type: boolean
      nullable: true
      description: Is product 18+
      example: false
    uom:
      type: integer
      nullable: true
      description: Unit of measurement from CatalogProductUomEnum from PIM
      allOf:
        - type: integer
        - $ref: ../enums/catalog_product_type_enum.yaml
    order_step:
      type: number
      nullable: true
      example: 0.7
    order_minvol:
      type: number
      nullable: true
      description: Minimum quantity for order
      example: 1.4
    picking_weight_deviation:
      type: number
      nullable: true
      description: Weight deviation limit in percent
      example: 0.35
ProductUniqueProperties:
  type: object
  properties:
    external_id:
      type: string
      nullable: true
      example: "14211"
    barcode:
      type: string
      nullable: true
      description: EAN
      example: "1003912039"
    code:
      type: string
      nullable: true
      description: Code to use in URL
      example: steyk-miratorg-ribay-ohlazhdennyy-320-g
    vendor_code:
      type: string
      description: Article
      example: "123466"
ProductFillableProperties:
  allOf:
    - $ref: "#/ProductUniqueProperties"
    - $ref: "#/ProductMassPatchableProperties"
ProductStatusProperties:
  type: object
  properties:
    status_id:
      type: integer
      description: Status ID from ProductStatusSetting object
      example: 1
    status_comment:
      type: string
      nullable: true
      example: Invalid image format
ProductRequiredProperties:
  required:
    - name
    - type
    - vendor_code
  type: object
  additionalProperties:
    type: string
ProductResponseRequiredProperties:
  type: object
  required:
    - name
    - code
    - type
    - allow_publish
    - vendor_code
    - barcode
    - weight
    - weight_gross
    - length
    - width
    - height
    - is_adult
    - uom
    - order_step
    - order_minvol
    - picking_weight_deviation
  additionalProperties:
    type: string
ProductIncludes:
  type: object
  properties:
    brand:
      $ref: ./brands.yaml#/Brand
    categories:
      type: array
      items:
        $ref: ./categories.yaml#/Category
    images:
      type: array
      items:
        $ref: ./product_images.yaml#/ProductImage
    attributes:
      type: array
      items:
        $ref: ./product_attributes.yaml#/ProductAttributeValue
    product_groups:
      type: array
      items:
        $ref: ./product_groups.yaml#/ProductGroup
    no_filled_required_attributes:
      type: boolean
      description: Product has not filled required attributes
ProductDraft:
  allOf:
    - $ref: "#/ProductReadonlyProperties"
    - $ref: "#/ProductFillableProperties"
    - $ref: "#/ProductStatusProperties"
    - $ref: "#/ProductIncludes"
    - $ref: "#/ProductResponseRequiredProperties"
ProductDraftWithoutInclude:
  allOf:
    - $ref: "#/ProductReadonlyProperties"
    - $ref: "#/ProductFillableProperties"
    - $ref: "#/ProductStatusProperties"
    - $ref: "#/ProductResponseRequiredProperties"
Product:
  allOf:
    - $ref: "#/ProductReadonlyProperties"
    - $ref: "#/ProductFillableProperties"
    - $ref: "#/ProductStatusProperties"
    - $ref: "#/ProductIncludes"
    - $ref: "#/ProductResponseRequiredProperties"
CreateProductRequest:
  description: >
    Attributes and images are optional. If they are not required, the
    corresponding field must be absent from the request, the null value cannot
    be used.
  allOf:
    - $ref: "#/ProductFillableProperties"
    - $ref: "#/ProductRequiredProperties"
    - $ref: ./product_images.yaml#/ReplaceProductImagesRequest
    - $ref: ./product_attributes.yaml#/ReplaceProductAttributesRequest
ReplaceProductRequest:
  description: >
    Attributes and images are optional. If they do not need to be changed, the
    corresponding fields must be absent from the request, the null value cannot
    be used. The update procedure is the same as in the PUT
    .../products/{id}/attributes and PUT .../products/{id}/images requests.
  allOf:
    - $ref: "#/ProductFillableProperties"
    - $ref: "#/ProductStatusProperties"
    - $ref: "#/ProductRequiredProperties"
    - $ref: ./product_attributes.yaml#/ReplaceProductAttributesRequest
    - $ref: ./product_images.yaml#/ReplaceProductImagesRequest
PatchProductRequest:
  description: >
    Attributes and images are optional. If they do not need to be changed, the
    corresponding fields must be absent from the request, the null value cannot
    be used. The update procedure is the same as in the PATCH
    .../products/{id}/attributes and PATCH .../products/{id}/images requests.
  allOf:
    - $ref: "#/ProductFillableProperties"
    - $ref: "#/ProductStatusProperties"
    - $ref: ./product_attributes.yaml#/PatchProductAttributesRequest
    - $ref: ./product_images.yaml#/PatchProductImagesRequest
ProductDraftResponse:
  type: object
  properties:
    data:
      $ref: "#/ProductDraft"
    meta:
      type: object
      additionalProperties:
        type: string
  required:
    - data
ProductResponse:
  type: object
  properties:
    data:
      $ref: "#/Product"
    meta:
      type: object
      additionalProperties:
        type: string
  required:
    - data
ProductsFilterProperties:
  type: object
  properties:
    id:
      type: integer
      description: Product ID(s) from PIM
      example: 1254
    name:
      type: string
      description: Name or part of the product name
      example: apple
    code:
      type: string
      description: Product code(s) used in URL
      example: tv-1
    external_id:
      type: string
      example: "264807"
    category_id:
      type: integer
      description: Category ID(s) from PIM
      example: 11
    status_id:
      type: integer
      description: Status ID from ProductStatusSetting object from PIM
      example: 2
    allow_publish:
      type: boolean
      example: true
    vendor_code:
      type: string
      description: Article
      example: "123466"
    barcode:
      type: string
      description: EAN
      example: "1003912039"
    is_adult:
      type: boolean
      description: Is product 18+
      example: false
    type:
      type: integer
      description: Product type from CatalogProductTypeEnum
      allOf:
        - type: integer
        - $ref: ../enums/catalog_product_type_enum.yaml
    brand_id:
      type: array
      items:
        type: integer
        description: Brand ID from PIM
        example: 12
    has_product_groups:
      type: boolean
      description: Does product belong to at least one product group
      example: true
    has_no_filled_required_attributes:
      type: boolean
      description: Does the product have at least one unfilled required attribute
      example: true
    category_has_is_gluing:
      type: boolean
      description: Belongs to a category with at least one attribute for product groups
      example: true
    created_at_lte:
      type: string
      format: date-time
      description: Create date is less than or equal to
      example: 2021-07-09T04:25:11.000000Z
    created_at_gte:
      type: string
      format: date-time
      description: Create date is older than or equal to
      example: 2021-07-03T11:57:28.000000Z
    updated_at_lte:
      type: string
      format: date-time
      description: Update date is less than or equal to
      example: 2021-07-09T04:25:11.000000Z
    updated_at_gte:
      type: string
      format: date-time
      description: Update date is older than or equal to
      example: 2021-07-03T11:57:28.000000Z
SearchProductDraftsFilter:
  allOf:
    - $ref: "#/ProductsFilterProperties"
SearchProductDraftsRequest:
  type: object
  properties:
    sort:
      $ref: ../../common_schemas.yaml#/RequestBodySort
    include:
      $ref: ../../common_schemas.yaml#/RequestBodyInclude
    pagination:
      $ref: ../../common_schemas.yaml#/RequestBodyPagination
    filter:
      $ref: "#/SearchProductDraftsFilter"
SearchProductDraftsResponse:
  type: object
  properties:
    data:
      type: array
      items:
        $ref: "#/ProductDraft"
    meta:
      type: object
      properties:
        pagination:
          $ref: ../../common_schemas.yaml#/ResponseBodyPagination
  required:
    - data
    - meta
SearchProductsFilter:
  allOf:
    - $ref: "#/ProductsFilterProperties"
SearchProductsRequest:
  type: object
  properties:
    sort:
      description: Sorting. The fields available for sorting can be found in :meta
      $ref: ../../common_schemas.yaml#/RequestBodySort
    include:
      $ref: ../../common_schemas.yaml#/RequestBodyInclude
    pagination:
      $ref: ../../common_schemas.yaml#/RequestBodyPagination
    filter:
      $ref: "#/SearchProductsFilter"
SearchProductsResponse:
  type: object
  properties:
    data:
      type: array
      items:
        $ref: "#/Product"
    meta:
      type: object
      properties:
        pagination:
          $ref: ../../common_schemas.yaml#/ResponseBodyPagination
  required:
    - data
    - meta
MassPatchProductsRequest:
  allOf:
    - $ref: ../../common_schemas.yaml#/RequestBodyMassOperation
    - type: object
      properties:
        fields:
          allOf:
            - $ref: "#/ProductMassPatchableProperties"
            - $ref: "#/ProductStatusProperties"
    - $ref: ./product_attributes.yaml#/PatchProductAttributesRequest
MassPatchProductsResult:
  type: object
  properties:
    data:
      type: object
      properties:
        products_result:
          description: The result of changing the properties of products
          $ref: ../../common_schemas.yaml#/MassOperationResultData
      required:
        - products_result
  required:
    - data
MassPatchProductsByQueryRequest:
  allOf:
    - type: object
      properties:
        filter:
          $ref: "#/ProductsFilterProperties"
        fields:
          allOf:
            - $ref: "#/ProductMassPatchableProperties"
            - $ref: "#/ProductStatusProperties"
    - $ref: ./product_attributes.yaml#/PatchProductAttributesRequest
ProductsCommonAttributesRequest:
  type: object
  properties:
    filter:
      $ref: "#/ProductsFilterProperties"
ProductsCommonAttributesResponse:
  type: object
  description: Common product attributes
  properties:
    data:
      type: array
      items:
        $ref: ./properties.yaml#/Property
  required:
    - data
