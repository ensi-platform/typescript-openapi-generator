{
  "SearchSellersRequestSort": "export enum SearchSellersRequestSort {\n    ID = 'id',\n    CREATED_AT = 'created_at',\n    ORGANIZATION_NAME = 'organization_name',\n    ORGANIZATION_OWNER_FULL_NAME = 'organization_owner_full_name',\n    ORGANIZATION_OWNER_EMAIL = 'organization_owner_email',\n    ORGANIZATION_OWNER_PHONE = 'organization_owner_phone',\n    STATUS = 'status',\n    MANAGER_USER_NAME = 'manager_user_name',\n}",
  "UnitsSellerStatusEnum": "/**\n * Статус продавца. Расшифровка значений:\n  * `1` - Продавец недооформлен, не дозаполнил информацию\n  * `2` - Продавец активен\n  * `3` - Продавец заблокирован\n */\nexport enum UnitsSellerStatusEnum {\n    CREATED = 1,\n    ACTIVATE = 2,\n    LOCKED = 3,\n}",
  "SearchSellersRequestFilter": "export interface SearchSellersRequestFilter {\n  /**\n   * Дата регистрации (От)\n   * @example 2021-06-11T11:27:10.000000Z\n  */\n  created_at_from: string;\n  /**\n   * Дата регистрации (До)\n   * @example 2021-06-11T11:27:10.000000Z\n  */\n  created_at_to: string;\n  status: UnitsSellerStatusEnum[];\n  /**\n   * ID продавца\n   * @example 1\n  */\n  id: number;\n  /**\n   * Название организации\n   * @example ООО Ромашка\n  */\n  legal_name: string;\n  /**\n   * ФИО владельца организации\n   * @example Иванов Иван Иванович\n  */\n  owner_full_name: string;\n  /**\n   * Email владельца организации\n   * @example ivanov@test.ru\n  */\n  owner_email: string;\n  /**\n   * Телефон владельца организации\n   * @example +79996663322\n  */\n  owner_phone: string;\n  manager_user_id: number[];\n}\n",
  "SearchSellersRequestInclude": "export enum SearchSellersRequestInclude {\n    OWNER = 'owner',\n    MANAGER = 'manager',\n}",
  "PaginationTypeCursorEnum": "/**\n * * Pagination types:\n* `cursor` - Пагинация используя cursor\n */\nexport enum PaginationTypeCursorEnum {\n    CURSOR = 'cursor',\n}",
  "RequestBodyCursorPagination": "export interface RequestBodyCursorPagination {\n  cursor?: string;\n  limit: number;\n  /**\n   * Тип пагинации\n  */\n  type: string & PaginationTypeCursorEnum;\n}\n",
  "PaginationTypeOffsetEnum": "/**\n * * Pagination types:\n* `offset` - Пагинация используя offset\n */\nexport enum PaginationTypeOffsetEnum {\n    OFFSET = 'offset',\n}",
  "RequestBodyOffsetPagination": "export interface RequestBodyOffsetPagination {\n  limit: number;\n  offset: number;\n  /**\n   * Тип пагинации\n  */\n  type: string & PaginationTypeOffsetEnum;\n}\n",
  "SearchSellersRequest": "export interface SearchSellersRequest {\n  sort: SearchSellersRequestSort[];\n  filter: SearchSellersRequestFilter;\n  include: SearchSellersRequestInclude[];\n  pagination: RequestBodyCursorPagination | RequestBodyOffsetPagination;\n}\n",
  "SellerFillableProperties": "export interface SellerFillableProperties {\n  /**\n   * Юридическое наименование организации\n   * @example Сокольники\n  */\n  legal_name: string;\n  /**\n   * Внешний код\n   * @example 15\n  */\n  external_id: string;\n  /**\n   * ИНН\n  */\n  inn: string;\n  /**\n   * КПП\n  */\n  kpp: string;\n  /**\n   * Юр. адрес\n  */\n  legal_address: string;\n  /**\n   * Фактический адрес\n  */\n  fact_address: string;\n  /**\n   * Номер банковского счета\n  */\n  payment_account: string;\n  /**\n   * Наименование банка\n  */\n  bank: string;\n  /**\n   * Юридический адрес банка\n  */\n  bank_address: string;\n  /**\n   * БИК банка\n  */\n  bank_bik: string;\n  status: UnitsSellerStatusEnum;\n  /**\n   * ID менеджера\n   * @example 1\n  */\n  manager_id: number;\n  /**\n   * Номер корреспондентского счета банка\n  */\n  correspondent_account: string;\n  /**\n   * Адреса складов отгрузки\n  */\n  storage_address: string;\n  /**\n   * Сайт компании\n  */\n  site: string;\n  /**\n   * Подтверждение о возможности работы с Платформой с использованием автоматических механизмов интеграции\n   * @example true\n  */\n  can_integration: boolean;\n  /**\n   * Бренды и товары, которыми торгует продавец\n  */\n  sale_info: string;\n  /**\n   * Город продавца\n  */\n  city: string;\n}\n",
  "SellerRequiredProperties": "export type SellerRequiredProperties = Record<string, any>;",
  "StoresSearchRequestSort": "export enum StoresSearchRequestSort {\n    ID = 'id',\n    NAME = 'name',\n    ADDRESS_STRING = 'address_string',\n    CONTACT_NAME = 'contact_name',\n    CONTACT_PHONE = 'contact_phone',\n}",
  "StoresSearchRequestFilter": "export interface StoresSearchRequestFilter {\n  /**\n   * ID склада\n   * @example 1\n  */\n  id: number;\n  /**\n   * ID продавца\n   * @example 1\n  */\n  seller_id: number;\n  /**\n   * Название склада\n   * @example Третий склад\n  */\n  name: string;\n  /**\n   * Адрес склада\n   * @example 124482, г Москва, г Зеленоград, р-н Савелки, к 305\n  */\n  address_string: string;\n  /**\n   * ФИО контактного лица\n   * @example Данилов Яков Евгеньевич\n  */\n  contact_name: string;\n  /**\n   * Телефон контактного лица\n   * @example +79996663322\n  */\n  contact_phone: string;\n}\n",
  "StoresSearchRequestInclude": "export enum StoresSearchRequestInclude {\n    CONTACT = 'contact',\n}",
  "StoresSearchRequest": "export interface StoresSearchRequest {\n  sort: StoresSearchRequestSort[];\n  filter: StoresSearchRequestFilter;\n  include: StoresSearchRequestInclude[];\n  pagination: RequestBodyCursorPagination | RequestBodyOffsetPagination;\n}\n",
  "StoreAddress": "/**\n * Адрес */\nexport interface StoreAddress {\n  /**\n   * Адрес одной строкой\n   * @example 107140, г Москва, Красносельский р-н, ул Красносельская Верхн., д 3А\n  */\n  address_string: string;\n  /**\n   * Код страны\n   * @example RU\n  */\n  country_code: string;\n  /**\n   * Почтовый индекс\n   * @example 107140\n  */\n  post_index: string;\n  /**\n   * Регион\n   * @example г Москва\n  */\n  region: string;\n  /**\n   * ФИАС ID региона\n   * @example 0c5b2444-70a0-4932-980c-b4dc0d3f02b5\n  */\n  region_guid: string;\n  /**\n   * Район в регионе\n   * @example Центральный\n  */\n  area: string;\n  /**\n   * ФИАС ID района в регионе\n  */\n  area_guid: string;\n  /**\n   * Город/населенный пункт\n   * @example г Москва\n  */\n  city: string;\n  /**\n   * ФИАС ID города/населенного пункта\n   * @example 0c5b2444-70a0-4932-980c-b4dc0d3f02b5\n  */\n  city_guid: string;\n  /**\n   * Улица\n   * @example ул Красносельская Верхн.\n  */\n  street: string;\n  /**\n   * Дом\n   * @example д 3А\n  */\n  house: string;\n  /**\n   * Строение/корпус\n  */\n  block: string;\n  /**\n   * Квартира/офис\n  */\n  flat: string;\n  /**\n   * Подъезд\n  */\n  porch: string;\n  /**\n   * Этаж\n  */\n  floor: string;\n  /**\n   * Домофон\n  */\n  intercom: string;\n  /**\n   * Комментарий к адресу\n  */\n  comment: string;\n  /**\n   * координаты: широта\n   * @example 55.785513\n  */\n  geo_lat: string;\n  /**\n   * координаты: долгота\n   * @example 37.665408\n  */\n  geo_lon: string;\n}\n",
  "StoreFillableProperties": "export interface StoreFillableProperties {\n  /**\n   * ID продавца\n   * @example 2\n  */\n  seller_id: number;\n  /**\n   * ID склада в системе продавца\n   * @example 015\n  */\n  xml_id: string;\n  /**\n   * Флаг активности склада\n   * @example true\n  */\n  active: boolean;\n  /**\n   * Название\n   * @example Сокольники\n  */\n  name: string;\n  address: StoreAddress;\n  /**\n   * Часовой пояс\n   * @example Europe/Moscow\n  */\n  timezone: string;\n}\n",
  "StoreRequiredProperties": "export type StoreRequiredProperties = Record<string, any>;",
  "StoreWorkingFillableProperties": "export interface StoreWorkingFillableProperties {\n  /**\n   * ID склада\n   * @example 17\n  */\n  store_id: number;\n  /**\n   * Флаг активности дня работы склада\n  */\n  active: boolean;\n  /**\n   * День недели (1-7)\n   * @example 1\n  */\n  day: number;\n  /**\n   * Время начала работы склада (00:00)\n   * @example 00:00\n  */\n  working_start_time: string;\n  /**\n   * Время конца работы склада (00:00)\n   * @example 00:00\n  */\n  working_end_time: string;\n}\n",
  "StoreWorkingRequiredProperties": "export type StoreWorkingRequiredProperties = Record<string, any>;",
  "StorePickupTimeFillableProperties": "export interface StorePickupTimeFillableProperties {\n  /**\n   * ID склада\n   * @example 17\n  */\n  store_id: number;\n  /**\n   * День недели (1-7)\n   * @example 3\n  */\n  day: number;\n  /**\n   * Код времени отгрузки у службы доставки\n   * @example 12-14\n  */\n  pickup_time_code: string;\n  /**\n   * Время начала отгрузки\n   * @example 14:00:00\n  */\n  pickup_time_start: string;\n  /**\n   * Время окончания отгрузки\n   * @example 18:00:00\n  */\n  pickup_time_end: string;\n  /**\n   * Время выгрузки информации о грузе в службу доставки\n   * @example 20:00:00\n  */\n  cargo_export_time: string;\n  /**\n   * Служба доставки (если указана, то данная информация переопределяет данные дня недели без службы доставки)\n   * @example 17\n  */\n  delivery_service: number;\n}\n",
  "StorePickupTimeRequiredProperties": "export type StorePickupTimeRequiredProperties = Record<string, any>;",
  "StoreContactFillableProperties": "export interface StoreContactFillableProperties {\n  /**\n   * ID склада\n   * @example 17\n  */\n  store_id: number;\n  /**\n   * Имя контактного лица\n   * @example Иванов Иван Иванович\n  */\n  name: string;\n  /**\n   * Телефон контактного лица\n   * @example +79876543210\n  */\n  phone: string;\n  /**\n   * Email контактного лица\n   * @example ivanov@example.com\n  */\n  email: string;\n}\n",
  "StoreContactRequiredProperties": "export type StoreContactRequiredProperties = Record<string, any>;",
  "SellerUsersSearchRequestSort": "export enum SellerUsersSearchRequestSort {\n    ID = 'id',\n    EMAIL = 'email',\n    PHONE = 'phone',\n    ACTIVE = 'active',\n    LOGIN = 'login',\n    CREATED_AT = 'created_at',\n    UPDATED_AT = 'updated_at',\n}",
  "SellerUsersSearchRequestFilter": "export interface SellerUsersSearchRequestFilter {\n  /**\n   * ID пользователя\n   * @example 1\n  */\n  id: number;\n  /**\n   * ФИО пользователя\n   * @example Пономарёва Таисия Юлиановна\n  */\n  full_name: string;\n  /**\n   * Email пользователя\n   * @example test@test.ru\n  */\n  email: string;\n  /**\n   * Телефон пользователя\n   * @example +79996663322\n  */\n  phone: string;\n  /**\n   * Логин пользователя\n   * @example test@test.ru\n  */\n  login: string;\n  /**\n   * Статус пользователя (true - Активен, false - Деактивирован)\n   * @example true\n  */\n  active: boolean;\n  /**\n   * ID роли\n   * @example 1\n  */\n  role: number;\n}\n",
  "SellerUsersSearchRequestInclude": "export enum SellerUsersSearchRequestInclude {\n    ROLES = 'roles',\n}",
  "SellerUsersSearchRequest": "export interface SellerUsersSearchRequest {\n  sort: SellerUsersSearchRequestSort[];\n  filter: SellerUsersSearchRequestFilter;\n  include: SellerUsersSearchRequestInclude[];\n  pagination: RequestBodyCursorPagination | RequestBodyOffsetPagination;\n}\n",
  "SellerUserFillableProperties": "export interface SellerUserFillableProperties {\n  /**\n   * ID продавца\n   * @example 2\n  */\n  seller_id: number;\n  /**\n   * Активен\n   * @example true\n  */\n  active: boolean;\n  /**\n   * Логин\n   * @example TestLogin\n  */\n  login: string;\n  /**\n   * Фамилия\n   * @example Иванов\n  */\n  last_name?: string;\n  /**\n   * Имя\n   * @example Иван\n  */\n  first_name?: string;\n  /**\n   * Отчество\n   * @example Иванович\n  */\n  middle_name?: string;\n  /**\n   * Email\n   * @example test@mail.ru\n  */\n  email: string;\n  /**\n   * Телефон\n   * @example +79191000000\n  */\n  phone: string;\n  /**\n   * Временная зона\n   * @example Europe/Moscow\n  */\n  timezone: string;\n}\n",
  "SellerUserWriteOnlyProperties": "export interface SellerUserWriteOnlyProperties {\n  /**\n   * Пароль\n   * @example testPassword775105k#i*\n  */\n  password: string;\n}\n",
  "SellerUserRequiredProperties": "export type SellerUserRequiredProperties = Record<string, any>;",
  "AddRolesToSellerUserRequest": "export interface AddRolesToSellerUserRequest {\n  /**\n   * Идентификаторы добавляемых ролей\n  */\n  roles: number[];\n  /**\n   * Время жизни роли\n   * @example 2021-01-29T12:36:13.000000Z\n  */\n  expires?: string;\n}\n",
  "DeleteRoleFromSellerUserRequest": "export interface DeleteRoleFromSellerUserRequest {\n  /**\n   * Идентификатор удаляемой роли\n  */\n  role_id: number;\n}\n",
  "SearchSellerUserRolesRequestSort": "export enum SearchSellerUserRolesRequestSort {\n    ID = 'id',\n    CREATED_AT = 'created_at',\n    UPDATED_AT = 'updated_at',\n}",
  "SearchSellerUserRolesRequestFilter": "export interface SearchSellerUserRolesRequestFilter {\n  /**\n   * ID пользователя\n   * @example 1\n  */\n  id: number;\n  /**\n   * Название роли\n   * @example customer\n  */\n  title: string;\n}\n",
  "SearchSellerUserRolesRequest": "export interface SearchSellerUserRolesRequest {\n  sort: SearchSellerUserRolesRequestSort[];\n  filter: SearchSellerUserRolesRequestFilter;\n  pagination: RequestBodyCursorPagination | RequestBodyOffsetPagination;\n}\n",
  "AdminUsersSearchRequestSort": "export enum AdminUsersSearchRequestSort {\n    ID = 'id',\n    EMAIL = 'email',\n    PHONE = 'phone',\n    ACTIVE = 'active',\n    LOGIN = 'login',\n    CREATED_AT = 'created_at',\n    UPDATED_AT = 'updated_at',\n}",
  "AdminUsersSearchRequestFilter": "export interface AdminUsersSearchRequestFilter {\n  /**\n   * ID пользователя\n   * @example 1\n  */\n  id: number;\n  /**\n   * Email пользователя\n   * @example test@test.ru\n  */\n  email: string;\n  /**\n   * Телефон пользователя\n   * @example +79996663322\n  */\n  phone: string;\n  /**\n   * Телефон пользователя\n   * @example 3322\n  */\n  phone_like: string;\n  /**\n   * Фамилия\n   * @example Иванов\n  */\n  last_name_like: string;\n  /**\n   * Имя\n   * @example Иван\n  */\n  first_name_like: string;\n  /**\n   * Отчество\n   * @example Иванович\n  */\n  middle_name_like: string;\n  /**\n   * Дата создания (от)\n   * @example 2020-01-01T15:47:21.000000Z\n  */\n  created_at_from: string;\n  /**\n   * Дата создания (до)\n   * @example 2020-01-01T15:47:21.000000Z\n  */\n  created_at_to: string;\n  /**\n   * Дата последнего обновления (от)\n   * @example 2020-01-01T15:47:21.000000Z\n  */\n  updated_at_from: string;\n  /**\n   * Дата последнего обновления (до)\n   * @example 2020-01-01T15:47:21.000000Z\n  */\n  updated_at_to: string;\n  /**\n   * Логин пользователя\n   * @example test@test.ru\n  */\n  login: string;\n  /**\n   * Статус пользователя (true - Активен, false - Деактивирован)\n   * @example true\n  */\n  active: boolean;\n  /**\n   * ID роли\n   * @example 1\n  */\n  role: number;\n}\n",
  "AdminUsersSearchRequestInclude": "export enum AdminUsersSearchRequestInclude {\n    ROLES = 'roles',\n}",
  "AdminUsersSearchRequest": "export interface AdminUsersSearchRequest {\n  sort: AdminUsersSearchRequestSort[];\n  filter: AdminUsersSearchRequestFilter;\n  include: AdminUsersSearchRequestInclude[];\n  pagination: RequestBodyCursorPagination | RequestBodyOffsetPagination;\n}\n",
  "SearchEnumValuesBody": "export interface SearchEnumValuesBody {\n  filter: SearchEnumValuesBody;\n}\n",
  "AdminUserFillableProperties": "export interface AdminUserFillableProperties {\n  /**\n   * Активен\n   * @example true\n  */\n  active: boolean;\n  /**\n   * Логин\n   * @example TestLogin\n  */\n  login: string;\n  /**\n   * Фамилия\n   * @example Иванов\n  */\n  last_name?: string;\n  /**\n   * Имя\n   * @example Иван\n  */\n  first_name?: string;\n  /**\n   * Отчество\n   * @example Иванович\n  */\n  middle_name?: string;\n  /**\n   * Email\n   * @example test@mail.ru\n  */\n  email: string;\n  /**\n   * Телефон\n   * @example +79191000000\n  */\n  phone: string;\n  /**\n   * Временная зона\n   * @example Europe/Moscow\n  */\n  timezone: string;\n}\n",
  "AdminUserRequiredProperties": "export type AdminUserRequiredProperties = Record<string, any>;",
  "AdminUserWriteOnlyProperties": "export interface AdminUserWriteOnlyProperties {\n  /**\n   * Пароль\n   * @example testPassword775105k#i*\n  */\n  password: string;\n}\n",
  "AdminUserForPatchCombination": "export interface AdminUserForPatchCombination {\n  /**\n   * Причина деактивации\n  */\n  cause_deactivation: string;\n}\n",
  "AddRolesToAdminUserRequest": "export interface AddRolesToAdminUserRequest {\n  /**\n   * Идентификаторы добавляемых ролей\n  */\n  roles: number[];\n  /**\n   * Время жизни роли\n   * @example 2021-01-29T12:36:13.000000Z\n  */\n  expires?: string;\n}\n",
  "DeleteRoleFromAdminUserRequest": "export interface DeleteRoleFromAdminUserRequest {\n  /**\n   * Идентификатор удаляемой роли\n  */\n  role_id: number;\n}\n",
  "MassChangeActive": "export interface MassChangeActive {\n  /**\n   * ID пользователей\n  */\n  user_ids: number[];\n  /**\n   * Статус пользователя (true - Активен, false - Деактивирован)\n  */\n  active: boolean;\n  /**\n   * Причина деактивации\n  */\n  cause_deactivation: string;\n}\n",
  "AdminUsersSetPassword": "export interface AdminUsersSetPassword {\n  /**\n   * Токен из ссылки по которой перешел пользователь\n   * @example 894ef36797a01973110b8a28a81f7682\n  */\n  token: string;\n  /**\n   * Новый пароль пользователя\n   * @example testPassword775105k#i*\n  */\n  password: string;\n}\n",
  "UnitsAdminUserRoleRightsAccessEnum": "/**\n * Права доступа. Расшифровка значений.\n  * `1xx` Для списка заказов:\n  * `101` - Пользователю доступен табличный список с фильтрами и поиском\n  * `102` - Пользователю доступна детальная страница заказа со всеми вкладками и данными для просмотра\n  * `103` - Пользователю доступна вкладка \"Главное\" для просмотра\n  * `104` - Пользователю доступна вкладка \"Клиент\" для просмотра\n  * `105` - Пользователю доступна вкладка \"Товары\" для просмотра\n  * `106` - Пользователю доступна вкладка \"Доставка\" для просмотра\n  * `107` - Пользователю доступна вкладка \"Комментарии\" для просмотра\n  * `108` - Пользователю доступна вкладка \"Вложения\" для просмотра\n  * `109` - Пользователю доступно только редактирование данных заказа (без действий)\n  * `110` - Пользователю доступна функция редактирование комментариев во вкладке \"Комментарии\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `111` - Пользователю доступна функция добавления/удаления проблемы к заказу и комментария  к проблеме во вкладке \"Комментариии\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `112` - Пользователю доступна функция редактирования способа доставки во вкладке \"Доставка\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `113` - Пользователю доступна функция редактирования комментария во вкладке \"Доставка\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `114` - Пользователю доступна функция редактирования полей клиента во вкладке \"Клиент\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `115` - Пользователю доступна функция загрузка вложений во вкладке \"Вложения\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `116` - Пользователю доступна функция удаления вложений во вкладке \"Вложения\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `117` - Пользователю доступно изменение статуса заказа на детальной странице + кнопка \"Действия\"\n  * `118` - Пользователю доступно создание заявки на возврат + кнопка \"Действия\"\n  * `120` - Пользователю доступно изменение статуса отгрузки на детальной странице заказ\n  * `2xx` Для возвратов:\n  * `201` - Пользователю доступен табличный список с фильтрами и поиском\n  * `202` - Пользователю доступная детальна страница возврата\n  * `203` - Пользователю доступна вкладка \"Главное\" для просмотра\n  * `204` - Пользователю доступна вкладка \"Товары\" для просмотра\n  * `205` - Пользователю доступна вкладка \"Вложения\" для просмотра\n  * `206` - Пользователю доступно только редактирование данных возврата (без действий)\n  * `207` - Пользователю доступна функция изменение ответственного за возврат во вкладке \"Главное\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `208` - Пользователю доступна функция загрузка вложений  во вкладке \"Вложения\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `209` - Пользователю доступна функция удаления вложений  во вкладке \"Вложения\" + кнопки \"Сохранить\"/\"Отменить\"\n  * `210` - Пользователю доступен табличный список с причинами возврата по кнопке\"Настройка причин возврата\"\n  * `211` - Пользователю доступно создание причин возврата + кнопка \"Добавить причину\"\n  * `212` - Пользователю доступно редактирование причин возврата + кнопка \"Изменить причину\"\n  * `3xx` Для настроек:\n  * `301` - Пользователю доступна для просмотра страница настроек\n  * `302` - Параметры корзины. Пользователю доступно редактирование параметра + кнопка \"Изменить параметр\"\n  * `303` - Срок оплаты заказа. Пользователю доступно редактирование параметра + кнопка \"Изменить параметр\"\n  * `304` - Срок оформления заказа. Пользователю доступно редактирование параметра + кнопка \"Изменить параметр\"\n  * `305` - Максимальное время обработки. Пользователю доступно редактирование параметра + кнопка \"Изменить параметр\"\n  * `4xx` Для каталога товаров:\n  * `401` - Пользователю доступен табличный список с фильтрами и поиском\n  * `402` - Пользователю доступна детальная страница товара со всеми со всеми вкладками и данными для просмотра\n  * `403` - Пользователь может создавать товар\n  * `404` - Пользователю доступна функция редактирование любых данных товара и совершения любых действий с ним\n  * `405` - Пользователю доступна вкладка \"Основные данные\" для просмотра\n  * `406` - Пользователю доступна вкладка \"Контент\" для просмотра\n  * `407` - Пользователю доступна вкладка \"Характеристики\" для просмотра\n  * `408` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `409` - Пользователю доступно полное редактирование во вкладке \"Контент\"\n  * `410` - Пользователю доступно полное редактирование во вкладке \"Характеристики\"\n  * `411` - Пользователю доступно полное редактирование во вкладке \"Основные данные\"\n  * `412` - Пользователю доступно только редактирование стоимости во вкладке \"Основные данные\"\n  * `413` - Пользователь может удалять товары\n  * `415` - Пользователю доступна функция \"Изменить атрибуты\" в табличном списке товаров\n  * `416` - Пользователю доступно добавление/удаление шильдиков у товара\n  * `417` - Пользователю доступна вкладка \"Шильдики\"\n  * `5xx` Для категорий товаров:\n  * `501` - Пользователю доступен табличный список с фильтрами и поиском\n  * `502` - Пользователю доступна детальная страница категории со всеми вкладками и данными для просмотра\n  * `503` - Пользователю доступна функция редактирование любых данных категории и совершения любых действий с ним\n  * `504` - Пользователь может создавать категории\n  * `505` - Пользователь может добавлять и редактировать атрибуты категории\n  * `506` - Пользователь может редактирование данные о категории (кроме активности)\n  * `507` - Пользователь может удалять категории\n  * `508` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `6xx` Для атрибутов товаров:\n  * `601` - Пользователю доступен табличный список с фильтрами и поиском\n  * `602` - Пользователю доступна детальная страница атрибутов со всеми со всеми вкладками и данными для просмотра\n  * `603` - Пользователь может редактирование данные о атрибутах (кроме активности и отображения на витрине)\n  * `604` - Пользователь может создать новый атрибут товара и сохранить его\n  * `605` - Пользователь может удалять атрибутов\n  * `606` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `607` - Пользователю доступно управление чек-боксом \"Отображение на витрине\"\n  * `7xx` Для пользователей:\n  * `701` - Пользователю доступен табличный список с фильтрами и поиском\n  * `702` - Пользователю доступна детальная страница пользователя со всеми со всеми вкладками и данными для просмотра\n  * `703` - Пользователю доступно редактирование пользователя кроме изменения активности , роли и пароля. удаления\n  * `704` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `705` - Пользователю доступно изменение пароля\n  * `706` - Пользователю доступно управление ролями пользователя\n  * `707` - Пользователю доступно создание пользователя\n  * `8xx` Для ролей:\n  * `801` - Пользователю доступен табличный список с фильтрами и поиском\n  * `802` - Пользователю доступна детальная страница роли со всеми со всеми вкладками и данными для просмотра\n  * `803` - Создание ролей\n  * `804` - Редактирование роли, кроме активности и удаления\n  * `805` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `806` - Пользователю доступно удаление роли\n  * `9xx` Для информационных страниц:\n  * `901` - Пользователю доступен табличный список с информационными страницами\n  * `902` - Пользователю доступна детальная страница информационной страницы со всеми данными для просмотра\n  * `903` - Пользователю доступно редактирование информационной страницы кроме изменения активности и удаления\n  * `904` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `905` - Пользователю доступно создание информационной страницы\n  * `906` - Пользователю доступно удаление информационной страницы\n  * `10xx` Для брендов:\n  * `1001` - Пользователю доступен табличный список с брендами с фильтрами и поиском\n  * `1002` - Пользователю доступна детальная страница бренда со всеми данными для просмотра\n  * `1003` - Пользователю доступно редактирование бренда (кроме изменения активности и удаления)\n  * `1004` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `1005` - Пользователю доступно создание бренда\n  * `1006` - Пользователю доступно удаление бренда\n  * `11xx` Для товарных склеек:\n  * `1101` - Пользователю доступен табличный список склеек с фильтрами и поиском\n  * `1102` - Пользователю доступна детальная страница склейки со всеми данными для просмотра\n  * `1103` - Пользователю доступно редактирование склейки (кроме изменения активности и удаления)\n  * `1104` - Пользователю доступно управление чек-боксом \"Активность\"\n  * `1105` - Пользователю доступно создание склейки\n  * `1106` - Пользователю доступно удаление склейки\n  * `12xx` Для клиентов:\n  * `1201` - Пользователю доступно удаление персональных данных клиента\n  * `13xx` Для скидок и промокодов:\n  * `1301` - Пользователю доступен табличный список со скидками\n  * `1302` - Пользователю доступна детальная страница скидки со всеми данными для просмотра и без возможности редактирования полей\n  * `1303` - Пользователю доступно создание скидки\n  * `1304` - Пользователю доступно редактирование скидки\n  * `1305` - Пользователю доступно удаление скидки\n  * `1306` - Пользователю доступно массовое обновление статусов скидки в табличном списке\n  * `1311` - Пользователю доступен табличный список с промокодами\n  * `1312` - Пользователю доступна детальная страница промокода со всеми данными для просмотра и без возможности редактирования полей\n  * `1313` - Пользователю доступно создание промокода\n  * `1314` - Пользователю доступно редактирование промокода\n  * `1315` - Пользователю доступно удаление промокода\n  * `16xx` Для шильдиков:\n  * `1601` - Пользователю доступен табличный список шильдиков с фильтрами и поиском\n  * `1602` - Пользователю доступна детальная страница товарного шильдика со всеми данными для просмотра\n  * `1603` - Пользователю доступно редактирование товарного шильдика\n  * `1604` - Пользователю доступно создание товарного шильдика\n  * `1605` - Пользователю доступно удаление товарного шильдика\n */\nexport enum UnitsAdminUserRoleRightsAccessEnum {\n    ORDER_LIST_READ = 101,\n    ORDER_DETAIL_READ = 102,\n    ORDER_DETAIL_MAIN_READ = 103,\n    ORDER_DETAIL_CLIENT_READ = 104,\n    ORDER_DETAIL_PRODUCTS_READ = 105,\n    ORDER_DETAIL_DELIVERY_READ = 106,\n    ORDER_DETAIL_COMMENTS_READ = 107,\n    ORDER_DETAIL_ATTACHMENTS_READ = 108,\n    ORDER_DETAIL_EDIT = 109,\n    ORDER_DETAIL_COMMENTS_EDIT = 110,\n    ORDER_DETAIL_PROBLEMATIC_EDIT = 111,\n    ORDER_DETAIL_DELIVERY_EDIT = 112,\n    ORDER_DETAIL_DELIVERY_COMMENTS_EDIT = 113,\n    ORDER_DETAIL_CLIENT_EDIT = 114,\n    ORDER_DETAIL_ATTACHMENTS_WRITE = 115,\n    ORDER_DETAIL_ATTACHMENTS_DELETE = 116,\n    ORDER_DETAIL_STATUS_EDIT = 117,\n    ORDER_DETAIL_REFUND_CREATE = 118,\n    ORDER_DETAIL_SHIPMENT_EDIT = 120,\n    REFUND_LIST_READ = 201,\n    REFUND_DETAIL_READ = 202,\n    REFUND_DETAIL_MAIN_READ = 203,\n    REFUND_DETAIL_PRODUCTS_READ = 204,\n    REFUND_DETAIL_ATTACHMENTS_READ = 205,\n    REFUND_DETAIL_EDIT = 206,\n    REFUND_DETAIL_RESPONSIBLE_EDIT = 207,\n    REFUND_DETAIL_ATTACHMENTS_WRITE = 208,\n    REFUND_DETAIL_ATTACHMENTS_DELETE = 209,\n    REFUND_DETAIL_REASONS_READ = 210,\n    REFUND_DETAIL_REASONS_CREATE = 211,\n    REFUND_DETAIL_REASONS_EDIT = 212,\n    SETTING_LIST_READ = 301,\n    SETTING_BASKET_EDIT = 302,\n    SETTING_PAYMENT_TIME_EDIT = 303,\n    SETTING_ORDER_CREATE_TIME_EDIT = 304,\n    SETTING_ORDER_PROCESS_TIME_EDIT = 305,\n    PRODUCT_CATALOG_LIST_READ = 401,\n    PRODUCT_CATALOG_DETAIL_READ = 402,\n    PRODUCT_CATALOG_PRODUCT_CREATE = 403,\n    PRODUCT_CATALOG_DETAIL_WRITE = 404,\n    PRODUCT_CATALOG_DETAIL_MAIN_DATA_READ = 405,\n    PRODUCT_CATALOG_DETAIL_CONTENT_READ = 406,\n    PRODUCT_CATALOG_DETAIL_FEATURE_READ = 407,\n    PRODUCT_CATALOG_DETAIL_ACTIVE_EDIT = 408,\n    PRODUCT_CATALOG_DETAIL_CONTENT_EDIT = 409,\n    PRODUCT_CATALOG_DETAIL_FEATURE_EDIT = 410,\n    PRODUCT_CATALOG_DETAIL_MAIN_DATA_EDIT = 411,\n    PRODUCT_CATALOG_DETAIL_PRICE_EDIT = 412,\n    PRODUCT_CATALOG_PRODUCT_DELETE = 413,\n    PRODUCT_CATALOG_MASS_PATCH = 415,\n    PRODUCT_CATALOG_DETAIL_NAMEPLATES_EDIT = 416,\n    PRODUCT_CATALOG_DETAIL_NAMEPLATES_READ = 417,\n    PRODUCT_CATEGORY_LIST_READ = 501,\n    PRODUCT_CATEGORY_DETAIL_READ = 502,\n    PRODUCT_CATEGORY_DETAIL_WRITE = 503,\n    PRODUCT_CATEGORY_CREATE = 504,\n    PRODUCT_CATEGORY_DETAIL_ATTRIBUTES_WRITE = 505,\n    PRODUCT_CATEGORY_DETAIL_EDIT = 506,\n    PRODUCT_CATEGORY_DELETE = 507,\n    PRODUCT_CATEGORY_DETAIL_ACTIVE_EDIT = 508,\n    PRODUCT_ATTRIBUTES_LIST_READ = 601,\n    PRODUCT_ATTRIBUTES_DETAIL_READ = 602,\n    PRODUCT_ATTRIBUTES_DETAIL_EDIT = 603,\n    PRODUCT_ATTRIBUTES_CREATE = 604,\n    PRODUCT_ATTRIBUTES_DELETE = 605,\n    PRODUCT_ATTRIBUTES_DETAIL_ACTIVE_EDIT = 606,\n    PRODUCT_ATTRIBUTES_DETAIL_SHOW_EDIT = 607,\n    USER_LIST_READ = 701,\n    USER_DETAIL_READ = 702,\n    USER_DETAIL_EDIT = 703,\n    USER_DETAIL_ACTIVE_EDIT = 704,\n    USER_DETAIL_PASSWORD_EDIT = 705,\n    USER_DETAIL_ROLE_EDIT = 706,\n    USER_CREATE = 707,\n    ROLE_LIST_READ = 801,\n    ROLE_DETAIL_READ = 802,\n    ROLE_CREATE = 803,\n    ROLE_DETAIL_EDIT = 804,\n    ROLE_DETAIL_ACTIVE_EDIT = 805,\n    ROLE_DELETE = 806,\n    PAGE_LIST_READ = 901,\n    PAGE_DETAIL_READ = 902,\n    PAGE_DETAIL_EDIT = 903,\n    PAGE_DETAIL_ACTIVE_EDIT = 904,\n    PAGE_CREATE = 905,\n    PAGE_DELETE = 906,\n    BRAND_LIST_READ = 1001,\n    BRAND_DETAIL_READ = 1002,\n    BRAND_DETAIL_EDIT = 1003,\n    BRAND_DETAIL_ACTIVE_EDIT = 1004,\n    BRAND_CREATE = 1005,\n    BRAND_DELETE = 1006,\n    PRODUCT_GROUP_LIST_READ = 1101,\n    PRODUCT_GROUP_DETAIL_READ = 1102,\n    PRODUCT_GROUP_DETAIL_EDIT = 1103,\n    PRODUCT_GROUP_DETAIL_ACTIVE_EDIT = 1104,\n    PRODUCT_GROUP_CREATE = 1105,\n    PRODUCT_GROUP_DELETE = 1106,\n    CUSTOMER_DELETE_PERSONAL_DATA = 1201,\n    DISCOUNT_LIST_READ = 1301,\n    DISCOUNT_DETAIL_READ = 1302,\n    DISCOUNT_CREATE = 1303,\n    DISCOUNT_DETAIL_EDIT = 1304,\n    DISCOUNT_DELETE = 1305,\n    DISCOUNT_MASS_STATUS_UPDATE = 1306,\n    PROMO_CODE_LIST_READ = 1311,\n    PROMO_CODE_DETAIL_READ = 1312,\n    PROMO_CODE_CREATE = 1313,\n    PROMO_CODE_DETAIL_EDIT = 1314,\n    PROMO_CODE_DELETE = 1315,\n    NAMEPLATE_LIST_READ = 1601,\n    NAMEPLATE_DETAIL_READ = 1602,\n    NAMEPLATE_DETAIL_EDIT = 1603,\n    NAMEPLATE_CREATE = 1604,\n    NAMEPLATE_DELETE = 1605,\n}",
  "AdminUserRoleFillableProperties": "export interface AdminUserRoleFillableProperties {\n  /**\n   * Название роли\n   * @example customer\n  */\n  title: string;\n  /**\n   * Активность\n   * @example true\n  */\n  active: boolean;\n  /**\n   * Права доступа\n  */\n  rights_access: UnitsAdminUserRoleRightsAccessEnum[];\n}\n",
  "AdminUserRoleRequiredProperties": "export type AdminUserRoleRequiredProperties = Record<string, any>;",
  "SearchAdminUserRolesRequestSort": "export enum SearchAdminUserRolesRequestSort {\n    ID = 'id',\n    CREATED_AT = 'created_at',\n    UPDATED_AT = 'updated_at',\n}",
  "SearchAdminUserRolesRequestFilter": "export interface SearchAdminUserRolesRequestFilter {\n  /**\n   * ID пользователя\n   * @example 1\n  */\n  id: number;\n  /**\n   * Название роли\n   * @example customer\n  */\n  title: string;\n}\n",
  "SearchAdminUserRolesRequest": "export interface SearchAdminUserRolesRequest {\n  sort: SearchAdminUserRolesRequestSort[];\n  filter: SearchAdminUserRolesRequestFilter;\n  pagination: RequestBodyCursorPagination | RequestBodyOffsetPagination;\n}\n"
}